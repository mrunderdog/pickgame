{"ast":null,"code":"import Web3 from 'web3';\nimport PickABI from '../contracts/Pick.json';\nconst getWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // 기존 window.ethereum 체크 로직\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      resolve(web3);\n    }\n    // 폴백: 로컬 프로바이더 사용\n    else {\n      const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\n      const web3 = new Web3(provider);\n      resolve(web3);\n    }\n  });\n};\nconst getContract = async () => {\n  try {\n    const web3 = await getWeb3();\n    const networkId = await web3.eth.net.getId();\n    const deployedNetwork = PickABI.networks[networkId];\n    if (!deployedNetwork) {\n      throw new Error(`Contract not deployed to detected network (ID: ${networkId})`);\n    }\n    return new web3.eth.Contract(PickABI.abi, deployedNetwork.address);\n  } catch (error) {\n    console.error(\"Failed to load web3, accounts, or contract. Error: \", error);\n    throw error;\n  }\n};\nconst connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      return true;\n    } catch (error) {\n      console.error(\"User denied account access\");\n      return false;\n    }\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    return false;\n  }\n};\nexport { getWeb3, getContract, connectWallet };","map":{"version":3,"names":["Web3","PickABI","getWeb3","Promise","resolve","reject","window","ethereum","web3","provider","providers","HttpProvider","getContract","networkId","eth","net","getId","deployedNetwork","networks","Error","Contract","abi","address","error","console","connectWallet","request","method","log"],"sources":["C:/Cursor/pick/frontend/src/utils/web3.js"],"sourcesContent":["import Web3 from 'web3';\r\nimport PickABI from '../contracts/Pick.json';\r\n\r\nconst getWeb3 = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // 기존 window.ethereum 체크 로직\r\n    if (window.ethereum) {\r\n      const web3 = new Web3(window.ethereum);\r\n      resolve(web3);\r\n    }\r\n    // 폴백: 로컬 프로바이더 사용\r\n    else {\r\n      const provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n      const web3 = new Web3(provider);\r\n      resolve(web3);\r\n    }\r\n  });\r\n};\r\n\r\nconst getContract = async () => {\r\n  try {\r\n    const web3 = await getWeb3();\r\n    const networkId = await web3.eth.net.getId();\r\n    const deployedNetwork = PickABI.networks[networkId];\r\n    if (!deployedNetwork) {\r\n      throw new Error(`Contract not deployed to detected network (ID: ${networkId})`);\r\n    }\r\n    return new web3.eth.Contract(\r\n      PickABI.abi,\r\n      deployedNetwork.address,\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Failed to load web3, accounts, or contract. Error: \", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"User denied account access\");\r\n      return false;\r\n    }\r\n  } else {\r\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { getWeb3, getContract, connectWallet };"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,OAAO,MAAM,wBAAwB;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,IAAI,GAAG,IAAIR,IAAI,CAACM,MAAM,CAACC,QAAQ,CAAC;MACtCH,OAAO,CAACI,IAAI,CAAC;IACf;IACA;IAAA,KACK;MACH,MAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC;MACzE,MAAMH,IAAI,GAAG,IAAIR,IAAI,CAACS,QAAQ,CAAC;MAC/BL,OAAO,CAACI,IAAI,CAAC;IACf;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACF,MAAMJ,IAAI,GAAG,MAAMN,OAAO,CAAC,CAAC;IAC5B,MAAMW,SAAS,GAAG,MAAML,IAAI,CAACM,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,CAAC;IAC5C,MAAMC,eAAe,GAAGhB,OAAO,CAACiB,QAAQ,CAACL,SAAS,CAAC;IACnD,IAAI,CAACI,eAAe,EAAE;MACpB,MAAM,IAAIE,KAAK,CAAC,kDAAkDN,SAAS,GAAG,CAAC;IACjF;IACA,OAAO,IAAIL,IAAI,CAACM,GAAG,CAACM,QAAQ,CAC1BnB,OAAO,CAACoB,GAAG,EACXJ,eAAe,CAACK,OAClB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAInB,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMD,MAAM,CAACC,QAAQ,CAACmB,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,OAAO,IAAI;IACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,KAAK;IACd;EACF,CAAC,MAAM;IACLC,OAAO,CAACI,GAAG,CAAC,qEAAqE,CAAC;IAClF,OAAO,KAAK;EACd;AACF,CAAC;AAED,SAAS1B,OAAO,EAAEU,WAAW,EAAEa,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}