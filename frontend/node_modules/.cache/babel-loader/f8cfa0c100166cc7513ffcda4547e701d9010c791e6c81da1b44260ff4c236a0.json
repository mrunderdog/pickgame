{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\pick\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ConnectWallet from './components/ConnectWallet';\nimport PickGame from './components/PickGame';\nimport { getContract, connectWallet } from './utils/web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const contractInstance = await getContract();\n        setContract(contractInstance);\n      } catch (error) {\n        console.error(\"Failed to initialize the app: \", error);\n      }\n    };\n    init();\n  }, []);\n  useEffect(() => {\n    const checkConnection = async () => {\n      if (window.ethereum) {\n        try {\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          if (accounts.length > 0) {\n            setAccount(accounts[0]);\n          }\n        } catch (error) {\n          console.error(\"An error occurred while checking the connection:\", error);\n        }\n      }\n    };\n    checkConnection();\n  }, []);\n  const handleConnect = async () => {\n    const connected = await connectWallet();\n    if (connected) {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      setAccount(accounts[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      onConnect: handleConnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PickGame, {\n      account: account,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4Nk3OAQIC1FQ/e7AxCfhOoPYet0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ConnectWallet","PickGame","getContract","connectWallet","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","init","contractInstance","error","console","checkConnection","window","ethereum","accounts","request","method","length","handleConnect","connected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnect","_c","$RefreshReg$"],"sources":["C:/Cursor/pick/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ConnectWallet from './components/ConnectWallet';\r\nimport PickGame from './components/PickGame';\r\nimport { getContract, connectWallet } from './utils/web3';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      try {\r\n        const contractInstance = await getContract();\r\n        setContract(contractInstance);\r\n      } catch (error) {\r\n        console.error(\"Failed to initialize the app: \", error);\r\n      }\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      if (window.ethereum) {\r\n        try {\r\n          const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n          if (accounts.length > 0) {\r\n            setAccount(accounts[0]);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"An error occurred while checking the connection:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n  }, []);\r\n\r\n  const handleConnect = async () => {\r\n    const connected = await connectWallet();\r\n    if (connected) {\r\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n      setAccount(accounts[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Pick Game</h1>\r\n      {!account ? (\r\n        <ConnectWallet onConnect={handleConnect} />\r\n      ) : (\r\n        <PickGame account={account} contract={contract} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,WAAW,EAAEC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMX,WAAW,CAAC,CAAC;QAC5CS,WAAW,CAACE,gBAAgB,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDF,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAe,CAAC,CAAC;UAC1E,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;YACvBb,UAAU,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;UACzB;QACF,CAAC,CAAC,OAAOL,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;QAC1E;MACF;IACF,CAAC;IAEDE,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,SAAS,GAAG,MAAMrB,aAAa,CAAC,CAAC;IACvC,IAAIqB,SAAS,EAAE;MACb,MAAML,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAe,CAAC,CAAC;MAC1EZ,UAAU,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB,CAACtB,OAAO,gBACPH,OAAA,CAACL,aAAa;MAAC+B,SAAS,EAAER;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3CzB,OAAA,CAACJ,QAAQ;MAACO,OAAO,EAAEA,OAAQ;MAACE,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CApDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}