{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\pick\\\\frontend\\\\src\\\\components\\\\PickGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Web3 from 'web3';\nimport { useSpring, animated } from 'react-spring';\nimport { Howl } from 'howler';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, BarController } from 'chart.js';\nimport './PickGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, BarController, Title, Tooltip, Legend);\n\n// 사운드 효과 정의\nconst sounds = {\n  click: new Howl({\n    src: ['/sounds/click.mp3']\n  }),\n  win: new Howl({\n    src: ['/sounds/win.mp3']\n  }),\n  newRound: new Howl({\n    src: ['/sounds/new-round.mp3']\n  })\n};\nfunction PickGame({\n  account,\n  contract\n}) {\n  _s();\n  const displayAddress = account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Not connected';\n  const [entryFee, setEntryFee] = useState('0');\n  const [prizePool, setPrizePool] = useState('0');\n  const [isRoundActive, setIsRoundActive] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [lastWinner, setLastWinner] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [balance, setBalance] = useState('0');\n  const [remainingGames, setRemainingGames] = useState(0);\n  const [pickedNumbers, setPickedNumbers] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Number of Picks',\n      data: [],\n      backgroundColor: 'rgba(75,192,192,0.6)'\n    }]\n  });\n  const chartRef = useRef(null);\n  const scrollPositionRef = useRef(0);\n  const [isNumberSelected, setIsNumberSelected] = useState(false);\n  const fetchGameInfo = useCallback(async () => {\n    if (contract && account) {\n      const web3 = new Web3(window.ethereum);\n      const fee = await contract.methods.entryFee().call();\n      const pool = await contract.methods.currentPrizePool().call();\n      const active = await contract.methods.isRoundActive().call();\n      const winner = await contract.methods.lastWinner().call();\n      const accountBalance = await web3.eth.getBalance(account);\n      const feeInEther = Web3.utils.fromWei(fee, 'ether');\n      const balanceInEther = Web3.utils.fromWei(accountBalance, 'ether');\n      setEntryFee(feeInEther);\n      setPrizePool(Web3.utils.fromWei(pool, 'ether'));\n      setIsRoundActive(active);\n      setLastWinner(winner);\n      setBalance(balanceInEther);\n      const remaining = Math.floor(parseFloat(balanceInEther) / parseFloat(feeInEther));\n      setRemainingGames(remaining);\n\n      // 이미 선택된 번호들 가져오기\n      const pickedNumbersArray = [];\n      for (let i = 1; i <= 45; i++) {\n        const isPicked = await contract.methods.pickedNumbers(i).call();\n        if (isPicked) {\n          pickedNumbersArray.push(i);\n        }\n      }\n      setPickedNumbers(pickedNumbersArray);\n    }\n  }, [contract, account]);\n  const fetchLeaderboard = useCallback(async () => {\n    try {\n      const response = await fetch('/api/leaderboard');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLeaderboard(data);\n    } catch (error) {\n      console.error(\"Failed to fetch leaderboard:\", error);\n    }\n  }, []);\n  const fetchStatistics = useCallback(async () => {\n    try {\n      const response = await fetch('/api/statistics');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setStatistics(data);\n    } catch (error) {\n      console.error(\"Failed to fetch statistics:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchGameInfo();\n    fetchLeaderboard();\n    fetchStatistics();\n  }, [fetchGameInfo, fetchLeaderboard, fetchStatistics]);\n  const handleSelectNumber = number => {\n    if (!pickedNumbers.includes(number)) {\n      setSelectedNumber(number);\n      setIsNumberSelected(true);\n      sounds.click.play();\n    }\n  };\n  const handleConfirmNumber = async () => {\n    if (contract && selectedNumber) {\n      setIsLoading(true);\n      try {\n        const result = await contract.methods.pickNumber(selectedNumber).send({\n          from: account,\n          value: Web3.utils.toWei(entryFee, 'ether')\n        });\n        const events = result.events;\n        if (events && events.NumberPicked) {\n          const pickedNumber = events.NumberPicked.returnValues.number;\n          // WinnerSelected 이벤트를 확인하여 당첨 여부 판단\n          const isWinner = events.WinnerSelected && events.WinnerSelected.returnValues.winner === account;\n          if (isWinner) {\n            sounds.win.play();\n          }\n          if (isWinner) {\n            alert(`Congratulations! You won with number ${pickedNumber}!`);\n          } else {\n            alert(`Sorry, your number ${pickedNumber} didn't win this time. Better luck next time!`);\n          }\n        }\n        setSelectedNumber(null);\n        setIsNumberSelected(false);\n        fetchGameInfo();\n      } catch (error) {\n        console.error('Error picking number:', error);\n        alert('Failed to pick number. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleStartNewRound = async () => {\n    if (contract && account === lastWinner) {\n      setIsLoading(true);\n      try {\n        const seed = Math.floor(Math.random() * 1000000);\n        await contract.methods.startNewRound(seed).send({\n          from: account\n        });\n        sounds.newRound.play();\n        alert('New round started successfully!');\n        fetchGameInfo();\n      } catch (error) {\n        console.error('Error starting new round:', error);\n        alert('Failed to start new round. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // 카드 애니메이션\n  const cardAnimation = useSpring({\n    from: {\n      transform: 'scale(0)'\n    },\n    to: {\n      transform: 'scale(1)'\n    }\n  });\n  useEffect(() => {\n    setChartData({\n      labels: Object.keys(statistics),\n      datasets: [{\n        label: 'Number of Picks',\n        data: Object.values(statistics),\n        backgroundColor: 'rgba(75,192,192,0.6)'\n      }]\n    });\n  }, [statistics]);\n  useEffect(() => {\n    const ctx = document.getElementById('statisticsChart');\n    if (ctx && JSON.stringify(chartData) !== JSON.stringify(chartRef.current)) {\n      // 현재 스크롤 위치 저장\n      scrollPositionRef.current = window.pageYOffset;\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      const newChartInstance = new ChartJS(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          // 차트 크기를 고정\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Number Pick Statistics'\n            }\n          }\n        }\n      });\n      setChartInstance(newChartInstance);\n      chartRef.current = chartData;\n\n      // 스크롤 위치 복원\n      setTimeout(() => {\n        window.scrollTo(0, scrollPositionRef.current);\n      }, 0);\n    }\n  }, [chartData, chartInstance]);\n  const renderCards = () => {\n    const cards = [];\n    for (let i = 1; i <= 45; i++) {\n      cards.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${selectedNumber === i ? 'selected' : ''} ${pickedNumbers.includes(i) ? 'picked' : ''}`,\n        onClick: () => handleSelectNumber(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this));\n    }\n    return cards;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pick-game-container ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-logo\",\n      children: \"Pick Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pick Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 12\n        }, this), \" \", displayAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 12\n        }, this), \" \", parseFloat(balance).toFixed(4), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Entry Fee:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 12\n        }, this), \" \", entryFee, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Prize Pool:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 12\n        }, this), \" \", prizePool, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Round Active:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 12\n        }, this), \" \", isRoundActive ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Winner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 12\n        }, this), \" \", lastWinner ? `${lastWinner.slice(0, 6)}...${lastWinner.slice(-4)}` : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Remaining Games:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 12\n        }, this), \" \", remainingGames]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pick a Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: renderCards().map((card, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n          style: cardAnimation,\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: isRoundActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button select-button\",\n          onClick: () => setIsNumberSelected(false),\n          disabled: !isNumberSelected,\n          children: \"Change Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button confirm-button\",\n          onClick: handleConfirmNumber,\n          disabled: !isNumberSelected || isLoading || remainingGames === 0,\n          children: isLoading ? 'Processing...' : remainingGames === 0 ? 'Insufficient Balance' : `Confirm and Pay ${entryFee} ETH`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : account === lastWinner && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleStartNewRound,\n        disabled: isLoading,\n        children: isLoading ? 'Processing...' : 'Start New Round'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [player.address.slice(0, 6), \"...\", player.address.slice(-4), \": \", player.wins, \" wins\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Number Pick Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"statisticsChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Transaction in progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(PickGame, \"OaxMwaNDmNv3for21owYkctirp4=\", false, function () {\n  return [useSpring];\n});\n_c = PickGame;\nexport default PickGame;\nvar _c;\n$RefreshReg$(_c, \"PickGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Web3","useSpring","animated","Howl","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","BarController","jsxDEV","_jsxDEV","Fragment","_Fragment","register","sounds","click","src","win","newRound","PickGame","account","contract","_s","displayAddress","slice","entryFee","setEntryFee","prizePool","setPrizePool","isRoundActive","setIsRoundActive","selectedNumber","setSelectedNumber","lastWinner","setLastWinner","isLoading","setIsLoading","balance","setBalance","remainingGames","setRemainingGames","pickedNumbers","setPickedNumbers","leaderboard","setLeaderboard","statistics","setStatistics","isDarkMode","setIsDarkMode","chartInstance","setChartInstance","chartData","setChartData","labels","datasets","label","data","backgroundColor","chartRef","scrollPositionRef","isNumberSelected","setIsNumberSelected","fetchGameInfo","web3","window","ethereum","fee","methods","call","pool","currentPrizePool","active","winner","accountBalance","eth","getBalance","feeInEther","utils","fromWei","balanceInEther","remaining","Math","floor","parseFloat","pickedNumbersArray","i","isPicked","push","fetchLeaderboard","response","fetch","ok","Error","status","json","error","console","fetchStatistics","handleSelectNumber","number","includes","play","handleConfirmNumber","result","pickNumber","send","from","value","toWei","events","NumberPicked","pickedNumber","returnValues","isWinner","WinnerSelected","alert","handleStartNewRound","seed","random","startNewRound","toggleDarkMode","document","body","classList","toggle","cardAnimation","transform","to","Object","keys","values","ctx","getElementById","JSON","stringify","current","pageYOffset","destroy","newChartInstance","type","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","setTimeout","scrollTo","renderCards","cards","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","card","index","div","style","disabled","player","address","wins","height","width","id","_c","$RefreshReg$"],"sources":["C:/Cursor/pick/frontend/src/components/PickGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Web3 from 'web3';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { Howl } from 'howler';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, BarController } from 'chart.js';\r\nimport './PickGame.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  BarController,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// 사운드 효과 정의\r\nconst sounds = {\r\n  click: new Howl({ src: ['/sounds/click.mp3'] }),\r\n  win: new Howl({ src: ['/sounds/win.mp3'] }),\r\n  newRound: new Howl({ src: ['/sounds/new-round.mp3'] }),\r\n};\r\n\r\nfunction PickGame({ account, contract }) {\r\n  const displayAddress = account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Not connected';\r\n\r\n  const [entryFee, setEntryFee] = useState('0');\r\n  const [prizePool, setPrizePool] = useState('0');\r\n  const [isRoundActive, setIsRoundActive] = useState(false);\r\n  const [selectedNumber, setSelectedNumber] = useState(null);\r\n  const [lastWinner, setLastWinner] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [balance, setBalance] = useState('0');\r\n  const [remainingGames, setRemainingGames] = useState(0);\r\n  const [pickedNumbers, setPickedNumbers] = useState([]);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [statistics, setStatistics] = useState({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [{\r\n      label: 'Number of Picks',\r\n      data: [],\r\n      backgroundColor: 'rgba(75,192,192,0.6)',\r\n    }]\r\n  });\r\n  const chartRef = useRef(null);\r\n  const scrollPositionRef = useRef(0);\r\n  const [isNumberSelected, setIsNumberSelected] = useState(false);\r\n\r\n  const fetchGameInfo = useCallback(async () => {\r\n    if (contract && account) {\r\n      const web3 = new Web3(window.ethereum);\r\n      const fee = await contract.methods.entryFee().call();\r\n      const pool = await contract.methods.currentPrizePool().call();\r\n      const active = await contract.methods.isRoundActive().call();\r\n      const winner = await contract.methods.lastWinner().call();\r\n      const accountBalance = await web3.eth.getBalance(account);\r\n      \r\n      const feeInEther = Web3.utils.fromWei(fee, 'ether');\r\n      const balanceInEther = Web3.utils.fromWei(accountBalance, 'ether');\r\n      \r\n      setEntryFee(feeInEther);\r\n      setPrizePool(Web3.utils.fromWei(pool, 'ether'));\r\n      setIsRoundActive(active);\r\n      setLastWinner(winner);\r\n      setBalance(balanceInEther);\r\n      \r\n      const remaining = Math.floor(parseFloat(balanceInEther) / parseFloat(feeInEther));\r\n      setRemainingGames(remaining);\r\n\r\n      // 이미 선택된 번호들 가져오기\r\n      const pickedNumbersArray = [];\r\n      for (let i = 1; i <= 45; i++) {\r\n        const isPicked = await contract.methods.pickedNumbers(i).call();\r\n        if (isPicked) {\r\n          pickedNumbersArray.push(i);\r\n        }\r\n      }\r\n      setPickedNumbers(pickedNumbersArray);\r\n    }\r\n  }, [contract, account]);\r\n\r\n  const fetchLeaderboard = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/api/leaderboard');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setLeaderboard(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch leaderboard:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchStatistics = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('/api/statistics');\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setStatistics(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch statistics:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchGameInfo();\r\n    fetchLeaderboard();\r\n    fetchStatistics();\r\n  }, [fetchGameInfo, fetchLeaderboard, fetchStatistics]);\r\n\r\n  const handleSelectNumber = (number) => {\r\n    if (!pickedNumbers.includes(number)) {\r\n      setSelectedNumber(number);\r\n      setIsNumberSelected(true);\r\n      sounds.click.play();\r\n    }\r\n  };\r\n\r\n  const handleConfirmNumber = async () => {\r\n    if (contract && selectedNumber) {\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await contract.methods.pickNumber(selectedNumber).send({\r\n          from: account,\r\n          value: Web3.utils.toWei(entryFee, 'ether')\r\n        });\r\n        \r\n        const events = result.events;\r\n        if (events && events.NumberPicked) {\r\n          const pickedNumber = events.NumberPicked.returnValues.number;\r\n          // WinnerSelected 이벤트를 확인하여 당첨 여부 판단\r\n          const isWinner = events.WinnerSelected && events.WinnerSelected.returnValues.winner === account;\r\n          \r\n          if (isWinner) {\r\n            sounds.win.play();\r\n          }\r\n          \r\n          if (isWinner) {\r\n            alert(`Congratulations! You won with number ${pickedNumber}!`);\r\n          } else {\r\n            alert(`Sorry, your number ${pickedNumber} didn't win this time. Better luck next time!`);\r\n          }\r\n        }\r\n        \r\n        setSelectedNumber(null);\r\n        setIsNumberSelected(false);\r\n        fetchGameInfo();\r\n      } catch (error) {\r\n        console.error('Error picking number:', error);\r\n        alert('Failed to pick number. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartNewRound = async () => {\r\n    if (contract && account === lastWinner) {\r\n      setIsLoading(true);\r\n      try {\r\n        const seed = Math.floor(Math.random() * 1000000);\r\n        await contract.methods.startNewRound(seed).send({ from: account });\r\n        sounds.newRound.play();\r\n        alert('New round started successfully!');\r\n        fetchGameInfo();\r\n      } catch (error) {\r\n        console.error('Error starting new round:', error);\r\n        alert('Failed to start new round. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    document.body.classList.toggle('dark-mode');\r\n  };\r\n\r\n  // 카드 애니메이션\r\n  const cardAnimation = useSpring({\r\n    from: { transform: 'scale(0)' },\r\n    to: { transform: 'scale(1)' },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setChartData({\r\n      labels: Object.keys(statistics),\r\n      datasets: [{\r\n        label: 'Number of Picks',\r\n        data: Object.values(statistics),\r\n        backgroundColor: 'rgba(75,192,192,0.6)',\r\n      }]\r\n    });\r\n  }, [statistics]);\r\n\r\n  useEffect(() => {\r\n    const ctx = document.getElementById('statisticsChart');\r\n    if (ctx && JSON.stringify(chartData) !== JSON.stringify(chartRef.current)) {\r\n      // 현재 스크롤 위치 저장\r\n      scrollPositionRef.current = window.pageYOffset;\r\n\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      const newChartInstance = new ChartJS(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false, // 차트 크기를 고정\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Number Pick Statistics'\r\n            }\r\n          }\r\n        }\r\n      });\r\n      setChartInstance(newChartInstance);\r\n      chartRef.current = chartData;\r\n\r\n      // 스크롤 위치 복원\r\n      setTimeout(() => {\r\n        window.scrollTo(0, scrollPositionRef.current);\r\n      }, 0);\r\n    }\r\n  }, [chartData, chartInstance]);\r\n\r\n  const renderCards = () => {\r\n    const cards = [];\r\n    for (let i = 1; i <= 45; i++) {\r\n      cards.push(\r\n        <div \r\n          key={i} \r\n          className={`card ${selectedNumber === i ? 'selected' : ''} ${pickedNumbers.includes(i) ? 'picked' : ''}`}\r\n          onClick={() => handleSelectNumber(i)}\r\n        >\r\n          {i}\r\n        </div>\r\n      );\r\n    }\r\n    return cards;\r\n  };\r\n\r\n  return (\r\n    <div className={`pick-game-container ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <h1 className=\"game-logo\">Pick Game</h1>\r\n      <button onClick={toggleDarkMode}>\r\n        {isDarkMode ? 'Light Mode' : 'Dark Mode'}\r\n      </button>\r\n      <div className=\"game-info\">\r\n        <h2>Pick Game</h2>\r\n        <p><strong>Your Account:</strong> {displayAddress}</p>\r\n        <p><strong>Your Balance:</strong> {parseFloat(balance).toFixed(4)} ETH</p>\r\n        <p><strong>Entry Fee:</strong> {entryFee} ETH</p>\r\n        <p><strong>Current Prize Pool:</strong> {prizePool} ETH</p>\r\n        <p><strong>Round Active:</strong> {isRoundActive ? 'Yes' : 'No'}</p>\r\n        <p><strong>Last Winner:</strong> {lastWinner ? `${lastWinner.slice(0, 6)}...${lastWinner.slice(-4)}` : 'None'}</p>\r\n        <p><strong>Remaining Games:</strong> {remainingGames}</p>\r\n      </div>\r\n      <div className=\"game-board\">\r\n        <h3>Pick a Number</h3>\r\n        <div className=\"card-container\">\r\n          {renderCards().map((card, index) => (\r\n            <animated.div key={index} style={cardAnimation}>\r\n              {card}\r\n            </animated.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"game-controls\">\r\n        {isRoundActive ? (\r\n          <>\r\n            <button \r\n              className=\"action-button select-button\"\r\n              onClick={() => setIsNumberSelected(false)}\r\n              disabled={!isNumberSelected}\r\n            >\r\n              Change Selection\r\n            </button>\r\n            <button \r\n              className=\"action-button confirm-button\"\r\n              onClick={handleConfirmNumber} \r\n              disabled={!isNumberSelected || isLoading || remainingGames === 0}\r\n            >\r\n              {isLoading ? 'Processing...' : \r\n               remainingGames === 0 ? 'Insufficient Balance' : \r\n               `Confirm and Pay ${entryFee} ETH`}\r\n            </button>\r\n          </>\r\n        ) : (\r\n          account === lastWinner && (\r\n            <button \r\n              className=\"action-button\"\r\n              onClick={handleStartNewRound} \r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Processing...' : 'Start New Round'}\r\n            </button>\r\n          )\r\n        )}\r\n      </div>\r\n      <div className=\"leaderboard\">\r\n        <h3>Leaderboard</h3>\r\n        <ul>\r\n          {leaderboard.map((player, index) => (\r\n            <li key={index}>\r\n              {player.address.slice(0, 6)}...{player.address.slice(-4)}: {player.wins} wins\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"statistics\">\r\n        <h3>Number Pick Statistics</h3>\r\n        <div style={{ height: '300px', width: '100%' }}>\r\n          <canvas id=\"statisticsChart\" />\r\n        </div>\r\n      </div>\r\n      {isLoading && <div className=\"loading\">Transaction in progress...</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PickGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}