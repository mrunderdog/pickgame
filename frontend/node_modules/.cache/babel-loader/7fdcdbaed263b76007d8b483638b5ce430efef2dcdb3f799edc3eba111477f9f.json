{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cursor\\\\pick\\\\frontend\\\\src\\\\components\\\\PickGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Web3 from 'web3';\nimport { useSpring, animated } from 'react-spring';\nimport { Howl } from 'howler';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, BarController } from 'chart.js';\nimport './PickGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, BarController, Title, Tooltip, Legend);\n\n// 사운드 효과 정의\nconst sounds = {\n  click: new Howl({\n    src: ['/sounds/click.mp3']\n  }),\n  win: new Howl({\n    src: ['/sounds/win.mp3']\n  }),\n  newRound: new Howl({\n    src: ['/sounds/new-round.mp3']\n  })\n};\nfunction PickGame({\n  account,\n  contract\n}) {\n  _s();\n  const displayAddress = account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Not connected';\n  const [entryFee, setEntryFee] = useState('0');\n  const [prizePool, setPrizePool] = useState('0');\n  const [isRoundActive, setIsRoundActive] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState(null);\n  const [lastWinner, setLastWinner] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [balance, setBalance] = useState('0');\n  const [remainingGames, setRemainingGames] = useState(0);\n  const [pickedNumbers, setPickedNumbers] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [statistics, setStatistics] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [chartInstance, setChartInstance] = useState(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Number of Picks',\n      data: [],\n      backgroundColor: 'rgba(75,192,192,0.6)'\n    }]\n  });\n  const chartRef = useRef(null);\n  const scrollPositionRef = useRef(0);\n  const [isNumberSelected, setIsNumberSelected] = useState(false);\n  const fetchGameInfo = useCallback(async () => {\n    if (contract && account) {\n      try {\n        const web3 = new Web3(window.ethereum);\n        const response = await fetch('http://localhost:3001/api/gameInfo', {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('Fetched game info:', data);\n        setEntryFee(Web3.utils.fromWei(data.entryFee, 'ether'));\n        setPrizePool(Web3.utils.fromWei(data.prizePool, 'ether'));\n        setIsRoundActive(data.isRoundActive);\n        setLastWinner(data.lastWinner);\n\n        // 계정 잔액 가져오기\n        const accountBalance = await web3.eth.getBalance(account);\n        setBalance(Web3.utils.fromWei(accountBalance, 'ether'));\n\n        // 나머지 로직...\n      } catch (error) {\n        console.error('Error fetching game info:', error);\n      }\n    }\n  }, [contract, account]);\n  const fetchLeaderboard = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/leaderboard', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLeaderboard(data);\n    } catch (error) {\n      console.error(\"Failed to fetch leaderboard:\", error);\n    }\n  }, []);\n  const fetchStatistics = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/statistics', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setStatistics(data);\n    } catch (error) {\n      console.error(\"Failed to fetch statistics:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchGameInfo();\n    fetchLeaderboard();\n    fetchStatistics();\n  }, [fetchGameInfo, fetchLeaderboard, fetchStatistics]);\n  const handleSelectNumber = number => {\n    if (!pickedNumbers.includes(number)) {\n      setSelectedNumber(number);\n      setIsNumberSelected(true);\n      sounds.click.play();\n    }\n  };\n  const handleConfirmNumber = async () => {\n    if (contract && selectedNumber) {\n      setIsLoading(true);\n      try {\n        const result = await contract.methods.pickNumber(selectedNumber).send({\n          from: account,\n          value: Web3.utils.toWei(entryFee, 'ether')\n        });\n        const events = result.events;\n        if (events && events.NumberPicked) {\n          const pickedNumber = events.NumberPicked.returnValues.number;\n          // WinnerSelected 이벤트를 확인하여 당첨 여부 판단\n          const isWinner = events.WinnerSelected && events.WinnerSelected.returnValues.winner === account;\n          if (isWinner) {\n            sounds.win.play();\n          }\n          if (isWinner) {\n            alert(`Congratulations! You won with number ${pickedNumber}!`);\n          } else {\n            alert(`Sorry, your number ${pickedNumber} didn't win this time. Better luck next time!`);\n          }\n        }\n        setSelectedNumber(null);\n        setIsNumberSelected(false);\n        fetchGameInfo();\n      } catch (error) {\n        console.error('Error picking number:', error);\n        alert('Failed to pick number. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const handleStartNewRound = async () => {\n    if (contract && account === lastWinner) {\n      setIsLoading(true);\n      try {\n        const seed = Math.floor(Math.random() * 1000000);\n        await contract.methods.startNewRound(seed).send({\n          from: account\n        });\n        sounds.newRound.play();\n        alert('New round started successfully!');\n        fetchGameInfo();\n      } catch (error) {\n        console.error('Error starting new round:', error);\n        alert('Failed to start new round. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  // 카드 애니메이션\n  const cardAnimation = useSpring({\n    from: {\n      transform: 'scale(0)'\n    },\n    to: {\n      transform: 'scale(1)'\n    }\n  });\n  useEffect(() => {\n    setChartData({\n      labels: Object.keys(statistics),\n      datasets: [{\n        label: 'Number of Picks',\n        data: Object.values(statistics),\n        backgroundColor: 'rgba(75,192,192,0.6)'\n      }]\n    });\n  }, [statistics]);\n  useEffect(() => {\n    const ctx = document.getElementById('statisticsChart');\n    if (ctx && JSON.stringify(chartData) !== JSON.stringify(chartRef.current)) {\n      // 현재 스크롤 위치 저장\n      scrollPositionRef.current = window.pageYOffset;\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      const newChartInstance = new ChartJS(ctx, {\n        type: 'bar',\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          // 차트 크기를 고정\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: 'Number Pick Statistics'\n            }\n          }\n        }\n      });\n      setChartInstance(newChartInstance);\n      chartRef.current = chartData;\n\n      // 스크롤 위치 복원\n      setTimeout(() => {\n        window.scrollTo(0, scrollPositionRef.current);\n      }, 0);\n    }\n  }, [chartData, chartInstance]);\n  const renderCards = () => {\n    const cards = [];\n    for (let i = 1; i <= 45; i++) {\n      cards.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${selectedNumber === i ? 'selected' : ''} ${pickedNumbers.includes(i) ? 'picked' : ''}`,\n        onClick: () => handleSelectNumber(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this));\n    }\n    return cards;\n  };\n  useEffect(() => {\n    const initSounds = () => {\n      sounds.click = new Howl({\n        src: ['/sounds/click.mp3']\n      });\n      sounds.win = new Howl({\n        src: ['/sounds/win.mp3']\n      });\n      sounds.newRound = new Howl({\n        src: ['/sounds/new-round.mp3']\n      });\n    };\n    window.addEventListener('click', initSounds, {\n      once: true\n    });\n    return () => {\n      window.removeEventListener('click', initSounds);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pick-game-container ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-logo\",\n      children: \"Pick Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pick Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 12\n        }, this), \" \", displayAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 12\n        }, this), \" \", parseFloat(balance).toFixed(4), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Entry Fee:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 12\n        }, this), \" \", entryFee, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Prize Pool:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 12\n        }, this), \" \", prizePool, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Round Active:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 12\n        }, this), \" \", isRoundActive ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Winner:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 12\n        }, this), \" \", lastWinner ? `${lastWinner.slice(0, 6)}...${lastWinner.slice(-4)}` : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Remaining Games:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 12\n        }, this), \" \", remainingGames]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pick a Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: renderCards().map((card, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n          style: cardAnimation,\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button select-button\",\n        onClick: () => setIsNumberSelected(false),\n        disabled: !isNumberSelected,\n        children: \"Change Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button confirm-button\",\n        onClick: handleConfirmNumber,\n        disabled: !isNumberSelected || isLoading || remainingGames === 0 || !isRoundActive,\n        children: isLoading ? 'Processing...' : !isRoundActive ? 'Waiting for new round' : remainingGames === 0 ? 'Insufficient Balance' : `Confirm and Pay ${entryFee} ETH`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), account === lastWinner && !isRoundActive && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleStartNewRound,\n        disabled: isLoading,\n        children: isLoading ? 'Processing...' : 'Start New Round'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [player.address.slice(0, 6), \"...\", player.address.slice(-4), \": \", player.wins, \" wins\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Number Pick Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '300px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"statisticsChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Transaction in progress...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(PickGame, \"x6c3JTGpqbTbAiymld6wsM36/q0=\", false, function () {\n  return [useSpring];\n});\n_c = PickGame;\nexport default PickGame;\nvar _c;\n$RefreshReg$(_c, \"PickGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Web3","useSpring","animated","Howl","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","BarController","jsxDEV","_jsxDEV","register","sounds","click","src","win","newRound","PickGame","account","contract","_s","displayAddress","slice","entryFee","setEntryFee","prizePool","setPrizePool","isRoundActive","setIsRoundActive","selectedNumber","setSelectedNumber","lastWinner","setLastWinner","isLoading","setIsLoading","balance","setBalance","remainingGames","setRemainingGames","pickedNumbers","setPickedNumbers","leaderboard","setLeaderboard","statistics","setStatistics","isDarkMode","setIsDarkMode","chartInstance","setChartInstance","chartData","setChartData","labels","datasets","label","data","backgroundColor","chartRef","scrollPositionRef","isNumberSelected","setIsNumberSelected","fetchGameInfo","web3","window","ethereum","response","fetch","credentials","ok","Error","status","json","console","log","utils","fromWei","accountBalance","eth","getBalance","error","fetchLeaderboard","fetchStatistics","handleSelectNumber","number","includes","play","handleConfirmNumber","result","methods","pickNumber","send","from","value","toWei","events","NumberPicked","pickedNumber","returnValues","isWinner","WinnerSelected","winner","alert","handleStartNewRound","seed","Math","floor","random","startNewRound","toggleDarkMode","document","body","classList","toggle","cardAnimation","transform","to","Object","keys","values","ctx","getElementById","JSON","stringify","current","pageYOffset","destroy","newChartInstance","type","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","setTimeout","scrollTo","renderCards","cards","i","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","initSounds","addEventListener","once","removeEventListener","parseFloat","toFixed","map","card","index","div","style","disabled","player","address","wins","height","width","id","_c","$RefreshReg$"],"sources":["C:/Cursor/pick/frontend/src/components/PickGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Web3 from 'web3';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { Howl } from 'howler';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, BarController } from 'chart.js';\r\nimport './PickGame.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  BarController,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// 사운드 효과 정의\r\nconst sounds = {\r\n  click: new Howl({ src: ['/sounds/click.mp3'] }),\r\n  win: new Howl({ src: ['/sounds/win.mp3'] }),\r\n  newRound: new Howl({ src: ['/sounds/new-round.mp3'] }),\r\n};\r\n\r\nfunction PickGame({ account, contract }) {\r\n  const displayAddress = account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Not connected';\r\n\r\n  const [entryFee, setEntryFee] = useState('0');\r\n  const [prizePool, setPrizePool] = useState('0');\r\n  const [isRoundActive, setIsRoundActive] = useState(false);\r\n  const [selectedNumber, setSelectedNumber] = useState(null);\r\n  const [lastWinner, setLastWinner] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [balance, setBalance] = useState('0');\r\n  const [remainingGames, setRemainingGames] = useState(0);\r\n  const [pickedNumbers, setPickedNumbers] = useState([]);\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [statistics, setStatistics] = useState({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [{\r\n      label: 'Number of Picks',\r\n      data: [],\r\n      backgroundColor: 'rgba(75,192,192,0.6)',\r\n    }]\r\n  });\r\n  const chartRef = useRef(null);\r\n  const scrollPositionRef = useRef(0);\r\n  const [isNumberSelected, setIsNumberSelected] = useState(false);\r\n\r\n  const fetchGameInfo = useCallback(async () => {\r\n    if (contract && account) {\r\n      try {\r\n        const web3 = new Web3(window.ethereum);\r\n        const response = await fetch('http://localhost:3001/api/gameInfo', {\r\n          credentials: 'include'\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched game info:', data);\r\n        \r\n        setEntryFee(Web3.utils.fromWei(data.entryFee, 'ether'));\r\n        setPrizePool(Web3.utils.fromWei(data.prizePool, 'ether'));\r\n        setIsRoundActive(data.isRoundActive);\r\n        setLastWinner(data.lastWinner);\r\n        \r\n        // 계정 잔액 가져오기\r\n        const accountBalance = await web3.eth.getBalance(account);\r\n        setBalance(Web3.utils.fromWei(accountBalance, 'ether'));\r\n        \r\n        // 나머지 로직...\r\n      } catch (error) {\r\n        console.error('Error fetching game info:', error);\r\n      }\r\n    }\r\n  }, [contract, account]);\r\n\r\n  const fetchLeaderboard = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/leaderboard', {\r\n        credentials: 'include'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setLeaderboard(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch leaderboard:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchStatistics = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/statistics', {\r\n        credentials: 'include'\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setStatistics(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch statistics:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchGameInfo();\r\n    fetchLeaderboard();\r\n    fetchStatistics();\r\n  }, [fetchGameInfo, fetchLeaderboard, fetchStatistics]);\r\n\r\n  const handleSelectNumber = (number) => {\r\n    if (!pickedNumbers.includes(number)) {\r\n      setSelectedNumber(number);\r\n      setIsNumberSelected(true);\r\n      sounds.click.play();\r\n    }\r\n  };\r\n\r\n  const handleConfirmNumber = async () => {\r\n    if (contract && selectedNumber) {\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await contract.methods.pickNumber(selectedNumber).send({\r\n          from: account,\r\n          value: Web3.utils.toWei(entryFee, 'ether')\r\n        });\r\n        \r\n        const events = result.events;\r\n        if (events && events.NumberPicked) {\r\n          const pickedNumber = events.NumberPicked.returnValues.number;\r\n          // WinnerSelected 이벤트를 확인하여 당첨 여부 판단\r\n          const isWinner = events.WinnerSelected && events.WinnerSelected.returnValues.winner === account;\r\n          \r\n          if (isWinner) {\r\n            sounds.win.play();\r\n          }\r\n          \r\n          if (isWinner) {\r\n            alert(`Congratulations! You won with number ${pickedNumber}!`);\r\n          } else {\r\n            alert(`Sorry, your number ${pickedNumber} didn't win this time. Better luck next time!`);\r\n          }\r\n        }\r\n        \r\n        setSelectedNumber(null);\r\n        setIsNumberSelected(false);\r\n        fetchGameInfo();\r\n      } catch (error) {\r\n        console.error('Error picking number:', error);\r\n        alert('Failed to pick number. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStartNewRound = async () => {\r\n    if (contract && account === lastWinner) {\r\n      setIsLoading(true);\r\n      try {\r\n        const seed = Math.floor(Math.random() * 1000000);\r\n        await contract.methods.startNewRound(seed).send({ from: account });\r\n        sounds.newRound.play();\r\n        alert('New round started successfully!');\r\n        fetchGameInfo();\r\n      } catch (error) {\r\n        console.error('Error starting new round:', error);\r\n        alert('Failed to start new round. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    document.body.classList.toggle('dark-mode');\r\n  };\r\n\r\n  // 카드 애니메이션\r\n  const cardAnimation = useSpring({\r\n    from: { transform: 'scale(0)' },\r\n    to: { transform: 'scale(1)' },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setChartData({\r\n      labels: Object.keys(statistics),\r\n      datasets: [{\r\n        label: 'Number of Picks',\r\n        data: Object.values(statistics),\r\n        backgroundColor: 'rgba(75,192,192,0.6)',\r\n      }]\r\n    });\r\n  }, [statistics]);\r\n\r\n  useEffect(() => {\r\n    const ctx = document.getElementById('statisticsChart');\r\n    if (ctx && JSON.stringify(chartData) !== JSON.stringify(chartRef.current)) {\r\n      // 현재 스크롤 위치 저장\r\n      scrollPositionRef.current = window.pageYOffset;\r\n\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      const newChartInstance = new ChartJS(ctx, {\r\n        type: 'bar',\r\n        data: chartData,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false, // 차트 크기를 고정\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Number Pick Statistics'\r\n            }\r\n          }\r\n        }\r\n      });\r\n      setChartInstance(newChartInstance);\r\n      chartRef.current = chartData;\r\n\r\n      // 스크롤 위치 복원\r\n      setTimeout(() => {\r\n        window.scrollTo(0, scrollPositionRef.current);\r\n      }, 0);\r\n    }\r\n  }, [chartData, chartInstance]);\r\n\r\n  const renderCards = () => {\r\n    const cards = [];\r\n    for (let i = 1; i <= 45; i++) {\r\n      cards.push(\r\n        <div \r\n          key={i} \r\n          className={`card ${selectedNumber === i ? 'selected' : ''} ${pickedNumbers.includes(i) ? 'picked' : ''}`}\r\n          onClick={() => handleSelectNumber(i)}\r\n        >\r\n          {i}\r\n        </div>\r\n      );\r\n    }\r\n    return cards;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initSounds = () => {\r\n      sounds.click = new Howl({ src: ['/sounds/click.mp3'] });\r\n      sounds.win = new Howl({ src: ['/sounds/win.mp3'] });\r\n      sounds.newRound = new Howl({ src: ['/sounds/new-round.mp3'] });\r\n    };\r\n\r\n    window.addEventListener('click', initSounds, { once: true });\r\n\r\n    return () => {\r\n      window.removeEventListener('click', initSounds);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`pick-game-container ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <h1 className=\"game-logo\">Pick Game</h1>\r\n      <button onClick={toggleDarkMode}>\r\n        {isDarkMode ? 'Light Mode' : 'Dark Mode'}\r\n      </button>\r\n      <div className=\"game-info\">\r\n        <h2>Pick Game</h2>\r\n        <p><strong>Your Account:</strong> {displayAddress}</p>\r\n        <p><strong>Your Balance:</strong> {parseFloat(balance).toFixed(4)} ETH</p>\r\n        <p><strong>Entry Fee:</strong> {entryFee} ETH</p>\r\n        <p><strong>Current Prize Pool:</strong> {prizePool} ETH</p>\r\n        <p><strong>Round Active:</strong> {isRoundActive ? 'Yes' : 'No'}</p>\r\n        <p><strong>Last Winner:</strong> {lastWinner ? `${lastWinner.slice(0, 6)}...${lastWinner.slice(-4)}` : 'None'}</p>\r\n        <p><strong>Remaining Games:</strong> {remainingGames}</p>\r\n      </div>\r\n      <div className=\"game-board\">\r\n        <h3>Pick a Number</h3>\r\n        <div className=\"card-container\">\r\n          {renderCards().map((card, index) => (\r\n            <animated.div key={index} style={cardAnimation}>\r\n              {card}\r\n            </animated.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"game-controls\">\r\n        <button \r\n          className=\"action-button select-button\"\r\n          onClick={() => setIsNumberSelected(false)}\r\n          disabled={!isNumberSelected}\r\n        >\r\n          Change Selection\r\n        </button>\r\n        <button \r\n          className=\"action-button confirm-button\"\r\n          onClick={handleConfirmNumber} \r\n          disabled={!isNumberSelected || isLoading || remainingGames === 0 || !isRoundActive}\r\n        >\r\n          {isLoading ? 'Processing...' : \r\n           !isRoundActive ? 'Waiting for new round' :\r\n           remainingGames === 0 ? 'Insufficient Balance' : \r\n           `Confirm and Pay ${entryFee} ETH`}\r\n        </button>\r\n        {account === lastWinner && !isRoundActive && (\r\n          <button \r\n            className=\"action-button\"\r\n            onClick={handleStartNewRound} \r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Processing...' : 'Start New Round'}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"leaderboard\">\r\n        <h3>Leaderboard</h3>\r\n        <ul>\r\n          {leaderboard.map((player, index) => (\r\n            <li key={index}>\r\n              {player.address.slice(0, 6)}...{player.address.slice(-4)}: {player.wins} wins\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"statistics\">\r\n        <h3>Number Pick Statistics</h3>\r\n        <div style={{ height: '300px', width: '100%' }}>\r\n          <canvas id=\"statisticsChart\" />\r\n        </div>\r\n      </div>\r\n      {isLoading && <div className=\"loading\">Transaction in progress...</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PickGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}